// Generated by CoffeeScript 1.7.1
(function () {
    var $, makeGoogleChart;

    $ = jQuery;

    makeGoogleChart = function (chartType, extraOptions) {
        return function (pivotData, opts) {
            var agg, colKey, colKeys, dataArray, dataTable, defaults, groupByTitle, h, hAxisTitle, headers, k, numCharsInHAxis, options, result, row, rowKey, rowKeys, title, v, vAxisTitle, wrapper, _i, _j, _len, _len1;
            defaults = {
                localeStrings: {
                    vs: "vs",
                    by: "by"
                }
            };
            opts = $.extend(defaults, opts);
            rowKeys = pivotData.getRowKeys();

            if (rowKeys.length === 0) {
                rowKeys.push([]);
            }
            colKeys = pivotData.getColKeys();
            if (colKeys.length === 0) {
                colKeys.push([]);
            }
            headers = (function () {
                var _i, _len, _results;
                _results = [];
                for (_i = 0, _len = rowKeys.length; _i < _len; _i++) {

                    h = rowKeys[_i];
                    //add by zhen
                    //if (h[0] === "")
                    //    continue;
                    _results.push(h.join("-"));
                }
                return _results;
            })();
            headers.unshift("");
            numCharsInHAxis = 0;
            dataArray = [headers];

            for (_i = 0, _len = colKeys.length; _i < _len; _i++) {
                colKey = colKeys[_i];
                row = [colKey.join("-")];
                numCharsInHAxis += row[0].length;
                for (_j = 0, _len1 = rowKeys.length; _j < _len1; _j++) {
                    //add by zhen
                    //if (rowKeys[_j][0] === "")
                    //    continue;
                    rowKey = rowKeys[_j];
                    agg = pivotData.getAggregator(rowKey, colKey);
                    if (agg.value() != null) {
                        row.push(agg.value());
                    } else {
                        row.push(null);
                    }
                }
                //if (row[0] === "")
                //    continue;
                dataArray.push(row);
            }
            title = vAxisTitle = pivotData.aggregatorName + (pivotData.valAttrs.length ? "(" + (pivotData.valAttrs.join(", ")) + ")" : "");
            hAxisTitle = pivotData.colAttrs.join("-");
            if (hAxisTitle !== "") {
                title += " " + opts.localeStrings.vs + " " + hAxisTitle;
            }
            groupByTitle = pivotData.rowAttrs.join("-");
            if (groupByTitle !== "") {
                title += " " + opts.localeStrings.by + " " + groupByTitle;
            }
            options = {
                width: $(window).width() / 1.2,
                height: $(window).height() / 1.4,
                title: title,
                hAxis: {
                    title: hAxisTitle,
                    slantedText: numCharsInHAxis > 50
                },
                vAxis: {
                    title: vAxisTitle
                }
            };
            if (dataArray[0].length === 2 && dataArray[0][1] === "") {
                options.legend = {
                    position: "none"
                };
            }
            for (k in extraOptions) {
                v = extraOptions[k];
                options[k] = v;
            }

            //            dataTable = google.visualization.arrayToDataTable(dataArray);
            //            result = $("<div style='width:100%;height:100px;'>");
            //            wrapper = new google.visualization.ChartWrapper({
            //                dataTable: dataTable,
            //                chartType: chartType,
            //                options: options
            //            });
            //            wrapper.draw(result[0]);
            //            result.bind("dblclick", function () {
            //                var editor;
            //                editor = new google.visualization.ChartEditor();
            //                google.visualization.events.addListener(editor, 'ok', function () {
            //                    return editor.getChartWrapper().draw(result[0]);
            //                });
            //                return editor.openDialog(wrapper);
            //            });
            //            return result;
            var chartContainerDiv = $("<div id='containerChart' style='width:" + (document.documentElement.clientWidth - 260) + "px;'>");
            $('body').append(chartContainerDiv);
            var chartContainer = document.getElementById('containerChart');
            var emptyElement = $("<span>&nbsp;</span>");
            $('body').append(emptyElement);
            result = $("<div class='resultClass'>");
            var metaData = new Array();
            metaData[0] = title;
            metaData[1] = groupByTitle;
            metaData[2] = vAxisTitle;
            //            console.log(chartType);
            //            console.log(dataArray);
            //            console.log(metaData);

            var chartResults = getChart(chartType, dataArray, metaData);

            var chart = new Highcharts.Chart(chartResults);
            emptyElement.append(chartContainer);
            result.append(emptyElement);
            return result;
        };
    };

    //    $.pivotUtilities.gchart_renderers = {
    //        "Line Chart": makeGoogleChart("LineChart"),
    //        //        "Bar Chart": makeGoogleChart("ColumnChart", {
    //        //            annotations: { alwaysOutside: true }
    //        //        }),
    //        "Pie Chart": makeGoogleChart("PieChart", {
    //            legend: { position: "right" },
    //            is3D: true
    //        }),
    //        "Stacked Bar Chart": makeGoogleChart("ColumnChart", {
    //            isStacked: true,
    //            legend: { position: "right" }

    //        }),
    //        "Area Chart": makeGoogleChart("AreaChart", {
    //            isStacked: true
    //        })
    //    };

    $.pivotUtilities.gchart_renderers = {
        "Pareto Chart": makeGoogleChart("column"),
        "Stacked Column Chart": makeGoogleChart("stackedcolumn"),
        "Stacked Column Chart(%)": makeGoogleChart("stackedcolumnPercent"),
        "Bar Chart": makeGoogleChart("bar"),
        "Trend Chart": makeGoogleChart("trend"),
        "Area Chart": makeGoogleChart("area", {
            isStacked: true
        }),
        "Pie Chart": makeGoogleChart("pie")
        //"Scatter Plot": makeGoogleChart("scatter")
        //        "Bubble Chart": makeGoogleChart("bubbles")
    };

}).call(this);
